Index: src/Entity/Films.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\Entity;\n\nuse App\\Repository\\FilmsRepository;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\n\n#[ORM\\Entity(repositoryClass: FilmsRepository::class)]\n#[Vich\\Uploadable]\nclass Films\n{\n    #[ORM\\Id]\n    #[ORM\\GeneratedValue]\n    #[ORM\\Column]\n    private ?int $id = null;\n\n    #[ORM\\Column(length: 255)]\n    private ?string $titre = null;\n\n    #[ORM\\Column(type: Types::TEXT)]\n    private ?string $description = null;\n\n/*    #[ORM\\Column(length: 255, nullable: true)]\n    private ?string $affiche = null;*/\n\n    #[Vich\\UploadableField(mapping: 'affiche', fileNameProperty: 'imageName', size: 'imageSize')]\n    private ?File $imageFile = null;\n\n    #[ORM\\Column(nullable: true)]\n    private ?string $imageName = null;\n\n    #[ORM\\Column(nullable: true)]\n    private ?int $imageSize = null;\n\n    #[ORM\\Column(nullable: true)]\n    private ?\\DateTimeImmutable $updatedAt = null;\n    #[ORM\\Column]\n    private ?int $ageMinimum = null;\n\n    #[ORM\\Column]\n    private ?bool $coupDeCoeur = null;\n\n    #[ORM\\Column]\n    private ?float $note = null;\n\n    /**\n     * @var Collection<int, Cinemas>\n     */\n    #[ORM\\ManyToMany(targetEntity: Cinemas::class, mappedBy: 'film')]\n    private Collection $cinemas;\n\n    /**\n     * @var Collection<int, Seance>\n     */\n    #[ORM\\OneToMany(targetEntity: Seance::class, mappedBy: 'film')]\n    private Collection $seances;\n\n    #[ORM\\Column(length: 255)]\n    private ?string $qualite = null;\n\n    /**\n     * @var Collection<int, Reservations>\n     */\n    #[ORM\\OneToMany(targetEntity: Reservations::class, mappedBy: 'films')]\n    private Collection $reservations;\n\n\n    public function __construct()\n    {\n        $this->cinemas = new ArrayCollection();\n        $this->seances = new ArrayCollection();\n        $this->reservations = new ArrayCollection();\n    }\n\n    public function getId(): ?int\n    {\n        return $this->id;\n    }\n\n    public function getTitre(): ?string\n    {\n        return $this->titre;\n    }\n\n    public function setTitre(string $titre): static\n    {\n        $this->titre = $titre;\n\n        return $this;\n    }\n\n    public function getDescription(): ?string\n    {\n        return $this->description;\n    }\n\n    public function setDescription(string $description): static\n    {\n        $this->description = $description;\n\n        return $this;\n    }\n/*\n    public function getAffiche(): ?string\n    {\n        return $this->affiche;\n    }\n\n    public function setAffiche(string $affiche): static\n    {\n        $this->affiche = $affiche;\n\n        return $this;\n    }*/\n\n    public function getAgeMinimum(): ?int\n    {\n        return $this->ageMinimum;\n    }\n\n    public function setAgeMinimum(int $ageMinimum): static\n    {\n        $this->ageMinimum = $ageMinimum;\n\n        return $this;\n    }\n\n    public function isCoupDeCoeur(): ?bool\n    {\n        return $this->coupDeCoeur;\n    }\n\n    public function setCoupDeCoeur(bool $coupDeCoeur): static\n    {\n        $this->coupDeCoeur = $coupDeCoeur;\n\n        return $this;\n    }\n\n    public function getNote(): ?float\n    {\n        return $this->note;\n    }\n\n    public function setNote(float $note): static\n    {\n        $this->note = $note;\n\n        return $this;\n    }\n\n    /**\n     * @return Collection<int, Cinemas>\n     */\n    public function getCinemas(): Collection\n    {\n        return $this->cinemas;\n    }\n\n    public function addCinema(Cinemas $cinema): static\n    {\n        if (!$this->cinemas->contains($cinema)) {\n            $this->cinemas->add($cinema);\n            $cinema->addFilm($this);\n        }\n\n        return $this;\n    }\n\n    public function removeCinema(Cinemas $cinema): static\n    {\n        if ($this->cinemas->removeElement($cinema)) {\n            $cinema->removeFilm($this);\n        }\n\n        return $this;\n    }\n\n    /**\n     * @return Collection<int, Seance>\n     */\n    public function getSeances(): Collection\n    {\n        return $this->seances;\n    }\n\n    public function addSeance(Seance $seance): static\n    {\n        if (!$this->seances->contains($seance)) {\n            $this->seances->add($seance);\n            $seance->setFilm($this);\n        }\n\n        return $this;\n    }\n\n    public function removeSeance(Seance $seance): static\n    {\n        if ($this->seances->removeElement($seance)) {\n            // set the owning side to null (unless already changed)\n            if ($seance->getFilm() === $this) {\n                $seance->setFilm(null);\n            }\n        }\n\n        return $this;\n    }\n\n    public function getQualite(): ?string\n    {\n        return $this->qualite;\n    }\n\n    public function setQualite(string $qualite): static\n    {\n        $this->qualite = $qualite;\n\n        return $this;\n    }\n\n    public function __toString(): string\n    {\n        return $this->titre;\n    }\n\n    /**\n     * @return Collection<int, Reservations>\n     */\n    public function getReservations(): Collection\n    {\n        return $this->reservations;\n    }\n\n    public function addReservation(Reservations $reservation): static\n    {\n        if (!$this->reservations->contains($reservation)) {\n            $this->reservations->add($reservation);\n            $reservation->setFilms($this);\n        }\n\n        return $this;\n    }\n\n    public function removeReservation(Reservations $reservation): static\n    {\n        if ($this->reservations->removeElement($reservation)) {\n            // set the owning side to null (unless already changed)\n            if ($reservation->getFilms() === $this) {\n                $reservation->setFilms(null);\n            }\n        }\n\n        return $this;\n    }\n    public function setImageFile(?File $imageFile = null): void\n    {\n        $this->imageFile = $imageFile;\n\n        if (null !== $imageFile) {\n            // It is required that at least one field changes if you are using doctrine\n            // otherwise the event listeners won't be called and the file is lost\n            $this->updatedAt = new \\DateTimeImmutable();\n        }\n    }\n\n    public function getImageFile(): ?File\n    {\n        return $this->imageFile;\n    }\n\n    public function setImageName(?string $imageName): void\n    {\n        $this->imageName = $imageName;\n    }\n\n    public function getImageName(): ?string\n    {\n        return $this->imageName;\n    }\n\n    public function setImageSize(?int $imageSize): void\n    {\n        $this->imageSize = $imageSize;\n    }\n\n    public function getImageSize(): ?int\n    {\n        return $this->imageSize;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/Films.php b/src/Entity/Films.php
--- a/src/Entity/Films.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ b/src/Entity/Films.php	(date 1729945371911)
@@ -293,4 +293,14 @@
         return $this->imageSize;
     }
 
+    public function getUpdatedAt (): ?\DateTimeImmutable
+    {
+        return $this->updatedAt;
+    }
+
+    public function setUpdatedAt (?\DateTimeImmutable $updatedAt): void
+    {
+        $this->updatedAt = $updatedAt;
+    }
+
 }
Index: src/Controller/Admin/FilmsCrudController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\Controller\\Admin;\n\nuse App\\Entity\\Films;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Controller\\AbstractCrudController;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\BooleanField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\IdField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\ImageField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\IntegerField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\TextareaField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\TextEditorField;\nuse EasyCorp\\Bundle\\EasyAdminBundle\\Field\\TextField;\nuse Vich\\UploaderBundle\\Form\\Type\\VichImageType;\n\nclass FilmsCrudController extends AbstractCrudController\n{\n    public static function getEntityFqcn(): string\n    {\n        return Films::class;\n    }\n\n\n    public function configureFields(string $pageName): iterable\n    {\n        return [\n            TextField::new('titre'),\n            TextField::new('description'),\n            TextareaField::new('imageFile')\n                ->setFormType(VichImageType::class)\n                ->setFormType(VichImageType::class)\n                ->setLabel('Affiche du film'),\n            IntegerField::new ('ageMinimum'),\n            BooleanField::new ('coupDeCoeur'),\n            IntegerField::new ('note'),\n            TextField::new ('qualite'),\n        ];\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/Admin/FilmsCrudController.php b/src/Controller/Admin/FilmsCrudController.php
--- a/src/Controller/Admin/FilmsCrudController.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ b/src/Controller/Admin/FilmsCrudController.php	(date 1729944659981)
@@ -5,11 +5,8 @@
 use App\Entity\Films;
 use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
 use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
-use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
-use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
 use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
 use EasyCorp\Bundle\EasyAdminBundle\Field\TextareaField;
-use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
 use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
 use Vich\UploaderBundle\Form\Type\VichImageType;
 
Index: templates/films/show.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/show.html.twig b/templates/films/show.html.twig
deleted file mode 100644
--- a/templates/films/show.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,52 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Films{% endblock %}
-
-{% block body %}
-    <h1>Films</h1>
-
-    <table class="table">
-        <tbody>
-            <tr>
-                <th>Id</th>
-                <td>{{ film.id }}</td>
-            </tr>
-            <tr>
-                <th>Titre</th>
-                <td>{{ film.titre }}</td>
-            </tr>
-            <tr>
-                <th>Description</th>
-                <td>{{ film.description }}</td>
-            </tr>
-            <tr>
-                <th>Affiche</th>
-                <td> <img src="{{ vich_uploader_asset(film, 'imageFile') }}" alt="{{ film.titre }}"></td>
-            </tr>
-            <tr>
-                <th>AgeMinimum</th>
-                <td>{{ film.ageMinimum }}</td>
-            </tr>
-            <tr>
-                <th>CoupDeCoeur</th>
-                <td>{{ film.coupDeCoeur ? 'Yes' : 'No' }}</td>
-            </tr>
-            <tr>
-                <th>Note</th>
-                <td>{{ film.note }}</td>
-            </tr>
-            <tr>
-                <th>Qualite</th>
-                <td>{{ film.qualite }}</td>
-            </tr>
-        </tbody>
-    </table>
-
-
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-
-    <a href="{{ path('app_films_edit', {'id': film.id}) }}">edit</a>
-
-    {{ include('films/_delete_form.html.twig') }}
-{% endblock %}
Index: templates/films/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/index.html.twig b/templates/films/index.html.twig
deleted file mode 100644
--- a/templates/films/index.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,45 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Films index{% endblock %}
-
-{% block body %}
-    <h1>Films index</h1>
-
-    <table class="table">
-        <thead>
-            <tr>
-                <th>Id</th>
-                <th>Titre</th>
-                <th>Description</th>
-                <th>Affiche</th>
-                <th>AgeMinimum</th>
-                <th>CoupDeCoeur</th>
-                <th>Note</th>
-                <th>Qualite</th>
-                <th>actions</th>
-            </tr>
-        </thead>
-        <tbody>
-        {% for film in films %}
-            <tr>
-                <td>{{ film.id }}</td>
-                <td>{{ film.titre }}</td>
-                <td>{{ film.description }}</td>
-                <td> <img src="{{ vich_uploader_asset(film, 'imageFile') }}" alt="{{ film.titre }}"></td>
-                <td>{{ film.ageMinimum }}</td>
-                <td>{{ film.coupDeCoeur ? 'Yes' : 'No' }}</td>
-                <td>{{ film.note }}</td>
-                <td>{{ film.qualite }}</td>
-                <td>
-                    <a href="{{ path('app_films_show', {'id': film.id}) }}" class="btn btn-primary m-lg-3">Voir</a>
-                </td>
-            </tr>
-        {% else %}
-            <tr>
-                <td colspan="9">no records found</td>
-            </tr>
-        {% endfor %}
-        </tbody>
-    </table>
-
-{% endblock %}
Index: src/Form/ReservationsType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/ReservationsType.php b/src/Form/ReservationsType.php
deleted file mode 100644
--- a/src/Form/ReservationsType.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,43 +0,0 @@
-<?php
-
-namespace App\Form;
-
-use App\Entity\Cinemas;
-use App\Entity\Films;
-use App\Entity\Reservations;
-use App\Entity\Seance;
-use Symfony\Bridge\Doctrine\Form\Type\EntityType;
-use Symfony\Component\Form\AbstractType;
-use Symfony\Component\Form\FormBuilderInterface;
-use Symfony\Component\OptionsResolver\OptionsResolver;
-
-class ReservationsType extends AbstractType
-{
-    public function buildForm(FormBuilderInterface $builder, array $options): void
-    {
-        $builder
-            ->add('nombrePlaces')
-            ->add('typePMR')
-            ->add('prixTotal')
-            ->add('cinemas', EntityType::class, [
-                'class' => Cinemas::class,
-                'choice_label' => 'id',
-            ])
-            ->add('films', EntityType::class, [
-                'class' => Films::class,
-                'choice_label' => 'id',
-            ])
-            ->add('seances', EntityType::class, [
-                'class' => Seance::class,
-                'choice_label' => 'id',
-            ])
-        ;
-    }
-
-    public function configureOptions(OptionsResolver $resolver): void
-    {
-        $resolver->setDefaults([
-            'data_class' => Reservations::class,
-        ]);
-    }
-}
Index: src/Controller/ReservationsController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/ReservationsController.php b/src/Controller/ReservationsController.php
deleted file mode 100644
--- a/src/Controller/ReservationsController.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,79 +0,0 @@
-<?php
-
-namespace App\Controller;
-
-use App\Entity\Reservations;
-use App\Form\ReservationsType;
-use App\Repository\ReservationsRepository;
-use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
-use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\Routing\Attribute\Route;
-
-#[Route('/reservations')]
-final class ReservationsController extends AbstractController
-{
-    #[Route(name: 'app_reservations_index', methods: ['GET'])]
-    public function index(ReservationsRepository $reservationsRepository): Response
-    {
-        return $this->render('reservations/index.html.twig', [
-            'reservations' => $reservationsRepository->findAll(),
-        ]);
-    }
-
-    #[Route('/new', name: 'app_reservations_new', methods: ['GET', 'POST'])]
-    public function new(Request $request, EntityManagerInterface $entityManager): Response
-    {
-        $reservation = new Reservations();
-        $form = $this->createForm(ReservationsType::class, $reservation);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($reservation);
-            $entityManager->flush();
-        }
-
-        return $this->render('reservations/new.html.twig', [
-            'reservation' => $reservation,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_reservations_show', methods: ['GET'])]
-    public function show(Reservations $reservation): Response
-    {
-        return $this->render('reservations/show.html.twig', [
-            'reservation' => $reservation,
-        ]);
-    }
-
-    #[Route('/{id}/edit', name: 'app_reservations_edit', methods: ['GET', 'POST'])]
-    public function edit(Request $request, Reservations $reservation, EntityManagerInterface $entityManager): Response
-    {
-        $form = $this->createForm(ReservationsType::class, $reservation);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_reservations_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('reservations/edit.html.twig', [
-            'reservation' => $reservation,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_reservations_delete', methods: ['POST'])]
-    public function delete(Request $request, Reservations $reservation, EntityManagerInterface $entityManager): Response
-    {
-        if ($this->isCsrfTokenValid('delete'.$reservation->getId(), $request->getPayload()->getString('_token'))) {
-            $entityManager->remove($reservation);
-            $entityManager->flush();
-        }
-
-        return $this->redirectToRoute('app_reservations_index', [], Response::HTTP_SEE_OTHER);
-    }
-}
Index: tests/Controller/FilmsControllerTest.php
===================================================================
diff --git a/tests/Controller/FilmsControllerTest.php b/tests/Controller/FilmsControllerTest.php
deleted file mode 100644
--- a/tests/Controller/FilmsControllerTest.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,155 +0,0 @@
-<?php
-
-namespace App\Tests\Controller;
-
-use App\Entity\Films;
-use Doctrine\ORM\EntityManagerInterface;
-use Doctrine\ORM\EntityRepository;
-use Symfony\Bundle\FrameworkBundle\KernelBrowser;
-use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
-
-final class FilmsControllerTest extends WebTestCase
-{
-    private KernelBrowser $client;
-    private EntityManagerInterface $manager;
-    private EntityRepository $repository;
-    private string $path = '/films/';
-
-    protected function setUp(): void
-    {
-        $this->client = static::createClient();
-        $this->manager = static::getContainer()->get('doctrine')->getManager();
-        $this->repository = $this->manager->getRepository(Films::class);
-
-        foreach ($this->repository->findAll() as $object) {
-            $this->manager->remove($object);
-        }
-
-        $this->manager->flush();
-    }
-
-    public function testIndex(): void
-    {
-        $this->client->followRedirects();
-        $crawler = $this->client->request('GET', $this->path);
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Film index');
-
-        // Use the $crawler to perform additional assertions e.g.
-        // self::assertSame('Some text on the page', $crawler->filter('.p')->first());
-    }
-
-    public function testNew(): void
-    {
-        $this->markTestIncomplete();
-        $this->client->request('GET', sprintf('%snew', $this->path));
-
-        self::assertResponseStatusCodeSame(200);
-
-        $this->client->submitForm('Save', [
-            'film[titre]' => 'Testing',
-            'film[description]' => 'Testing',
-            'film[affiche]' => 'Testing',
-            'film[ageMinimum]' => 'Testing',
-            'film[coupDeCoeur]' => 'Testing',
-            'film[note]' => 'Testing',
-            'film[qualite]' => 'Testing',
-            'film[cinemas]' => 'Testing',
-        ]);
-
-        self::assertResponseRedirects($this->path);
-
-        self::assertSame(1, $this->repository->count([]));
-    }
-
-    public function testShow(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('My Title');
-        $fixture->setDescription('My Title');
-        $fixture->setAffiche('My Title');
-        $fixture->setAgeMinimum('My Title');
-        $fixture->setCoupDeCoeur('My Title');
-        $fixture->setNote('My Title');
-        $fixture->setQualite('My Title');
-        $fixture->setCinemas('My Title');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Film');
-
-        // Use assertions to check that the properties are properly displayed.
-    }
-
-    public function testEdit(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('Value');
-        $fixture->setDescription('Value');
-        $fixture->setAffiche('Value');
-        $fixture->setAgeMinimum('Value');
-        $fixture->setCoupDeCoeur('Value');
-        $fixture->setNote('Value');
-        $fixture->setQualite('Value');
-        $fixture->setCinemas('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s/edit', $this->path, $fixture->getId()));
-
-        $this->client->submitForm('Update', [
-            'film[titre]' => 'Something New',
-            'film[description]' => 'Something New',
-            'film[affiche]' => 'Something New',
-            'film[ageMinimum]' => 'Something New',
-            'film[coupDeCoeur]' => 'Something New',
-            'film[note]' => 'Something New',
-            'film[qualite]' => 'Something New',
-            'film[cinemas]' => 'Something New',
-        ]);
-
-        self::assertResponseRedirects('/films/');
-
-        $fixture = $this->repository->findAll();
-
-        self::assertSame('Something New', $fixture[0]->getTitre());
-        self::assertSame('Something New', $fixture[0]->getDescription());
-        self::assertSame('Something New', $fixture[0]->getAffiche());
-        self::assertSame('Something New', $fixture[0]->getAgeMinimum());
-        self::assertSame('Something New', $fixture[0]->getCoupDeCoeur());
-        self::assertSame('Something New', $fixture[0]->getNote());
-        self::assertSame('Something New', $fixture[0]->getQualite());
-        self::assertSame('Something New', $fixture[0]->getCinemas());
-    }
-
-    public function testRemove(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('Value');
-        $fixture->setDescription('Value');
-        $fixture->setAffiche('Value');
-        $fixture->setAgeMinimum('Value');
-        $fixture->setCoupDeCoeur('Value');
-        $fixture->setNote('Value');
-        $fixture->setQualite('Value');
-        $fixture->setCinemas('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-        $this->client->submitForm('Delete');
-
-        self::assertResponseRedirects('/films/');
-        self::assertSame(0, $this->repository->count([]));
-    }
-}
Index: templates/reservations/_form.html.twig
===================================================================
diff --git a/templates/reservations/_form.html.twig b/templates/reservations/_form.html.twig
deleted file mode 100644
--- a/templates/reservations/_form.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,4 +0,0 @@
-{{ form_start(form) }}
-    {{ form_widget(form) }}
-    <button class="btn">{{ button_label|default('Save') }}</button>
-{{ form_end(form) }}
Index: src/Controller/FilmsController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/FilmsController.php b/src/Controller/FilmsController.php
deleted file mode 100644
--- a/src/Controller/FilmsController.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,81 +0,0 @@
-<?php
-
-namespace App\Controller;
-
-use App\Entity\Films;
-use App\Form\FilmsType;
-use App\Repository\FilmsRepository;
-use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
-use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\Routing\Attribute\Route;
-
-#[Route('/films')]
-final class FilmsController extends AbstractController
-{
-    #[Route(name: 'app_films_index', methods: ['GET'])]
-    public function index(FilmsRepository $filmsRepository): Response
-    {
-        return $this->render('films/index.html.twig', [
-            'films' => $filmsRepository->findAll(),
-        ]);
-    }
-
-    #[Route('/new', name: 'app_films_new', methods: ['GET', 'POST'])]
-    public function new(Request $request, EntityManagerInterface $entityManager): Response
-    {
-        $film = new Films();
-        $form = $this->createForm(FilmsType::class, $film);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($film);
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('films/new.html.twig', [
-            'film' => $film,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_films_show', methods: ['GET'])]
-    public function show(Films $film): Response
-    {
-        return $this->render('films/show.html.twig', [
-            'film' => $film,
-        ]);
-    }
-
-    #[Route('/{id}/edit', name: 'app_films_edit', methods: ['GET', 'POST'])]
-    public function edit(Request $request, Films $film, EntityManagerInterface $entityManager): Response
-    {
-        $form = $this->createForm(FilmsType::class, $film);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('films/edit.html.twig', [
-            'film' => $film,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_films_delete', methods: ['POST'])]
-    public function delete(Request $request, Films $film, EntityManagerInterface $entityManager): Response
-    {
-        if ($this->isCsrfTokenValid('delete'.$film->getId(), $request->getPayload()->getString('_token'))) {
-            $entityManager->remove($film);
-            $entityManager->flush();
-        }
-
-        return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-    }
-}
Index: templates/reservations/new.html.twig
===================================================================
diff --git a/templates/reservations/new.html.twig b/templates/reservations/new.html.twig
deleted file mode 100644
--- a/templates/reservations/new.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,11 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}New Reservations{% endblock %}
-
-{% block body %}
-    <h1>Create new Reservations</h1>
-
-    {{ include('reservations/_form.html.twig') }}
-
-    <a href="{{ path('app_reservations_index') }}">back to list</a>
-{% endblock %}
Index: templates/films/new.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/new.html.twig b/templates/films/new.html.twig
deleted file mode 100644
--- a/templates/films/new.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,11 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}New Films{% endblock %}
-
-{% block body %}
-    <h1>Create new Films</h1>
-
-    {{ include('films/_form.html.twig') }}
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-{% endblock %}
Index: templates/reservations/edit.html.twig
===================================================================
diff --git a/templates/reservations/edit.html.twig b/templates/reservations/edit.html.twig
deleted file mode 100644
--- a/templates/reservations/edit.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,16 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Edit Reservations{% endblock %}
-
-{% block body %}
-    <h1>Edit Reservations</h1>
-
-    <form method="post" action="{{ path('app_reservations_edit', {'id': reservation.id}) }}" onsubmit="return confirm('Valider la modification de votre reservation?');">
-        {{ form_widget(form) }}
-        <button class="btn">Valider</button>
-    </form>
-
-
-    <a href="{{ path('app_reservations_index') }}">Retour à la liste</a>
-
-{% endblock %}
Index: templates/reservations/index.html.twig
===================================================================
diff --git a/templates/reservations/index.html.twig b/templates/reservations/index.html.twig
deleted file mode 100644
--- a/templates/reservations/index.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,35 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Reservations index{% endblock %}
-
-{% block body %}
-    <h1>Vos réservations</h1>
-
-    <table class="table">
-        <thead>
-            <tr>
-                <th>Places</th>
-                <th>Type PMR ?</th>
-                <th>Prix Total</th>
-            </tr>
-        </thead>
-        <tbody>
-        {% for reservation in reservations %}
-            <tr>
-                <td>{{ reservation.nombrePlaces }}</td>
-                <td>{{ reservation.typePMR ? 'Oui' : 'Non' }}</td>
-                <td>{{ reservation.prixTotal }}</td>
-                <td class="d-flex">
-                    <a href="{{ path('app_reservations_show', {'id': reservation.id}) }}" class="btn btn-primary m-lg-3 ">Voir</a>
-                    <a href="{{ path('app_reservations_edit', {'id': reservation.id}) }}" class="btn btn-secondary m-lg-3 ">Modifier</a>
-                    {{ include('reservations/_delete_form.html.twig') }}
-                </td>
-            </tr>
-        {% else %}
-            <tr>
-                <td colspan="5">no records found</td>
-            </tr>
-        {% endfor %}
-        </tbody>
-    </table>
-{% endblock %}
Index: templates/reservations/_delete_form.html.twig
===================================================================
diff --git a/templates/reservations/_delete_form.html.twig b/templates/reservations/_delete_form.html.twig
deleted file mode 100644
--- a/templates/reservations/_delete_form.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,4 +0,0 @@
-<form method="post" action="{{ path('app_reservations_delete', {'id': reservation.id}) }}" onsubmit="return confirm('Etes-vous sur d\'annuler votre reservation?');">
-    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ reservation.id) }}">
-    <button class="btn btn-danger m-lg-3">Supprimer</button>
-</form>
Index: tests/Controller/ReservationsControllerTest.php
===================================================================
diff --git a/tests/Controller/ReservationsControllerTest.php b/tests/Controller/ReservationsControllerTest.php
deleted file mode 100644
--- a/tests/Controller/ReservationsControllerTest.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,143 +0,0 @@
-<?php
-
-namespace App\Tests\Controller;
-
-use App\Entity\Reservations;
-use Doctrine\ORM\EntityManagerInterface;
-use Doctrine\ORM\EntityRepository;
-use Symfony\Bundle\FrameworkBundle\KernelBrowser;
-use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
-
-final class ReservationsControllerTest extends WebTestCase
-{
-    private KernelBrowser $client;
-    private EntityManagerInterface $manager;
-    private EntityRepository $repository;
-    private string $path = '/reservations/';
-
-    protected function setUp(): void
-    {
-        $this->client = static::createClient();
-        $this->manager = static::getContainer()->get('doctrine')->getManager();
-        $this->repository = $this->manager->getRepository(Reservations::class);
-
-        foreach ($this->repository->findAll() as $object) {
-            $this->manager->remove($object);
-        }
-
-        $this->manager->flush();
-    }
-
-    public function testIndex(): void
-    {
-        $this->client->followRedirects();
-        $crawler = $this->client->request('GET', $this->path);
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Reservation index');
-
-        // Use the $crawler to perform additional assertions e.g.
-        // self::assertSame('Some text on the page', $crawler->filter('.p')->first());
-    }
-
-    public function testNew(): void
-    {
-        $this->markTestIncomplete();
-        $this->client->request('GET', sprintf('%snew', $this->path));
-
-        self::assertResponseStatusCodeSame(200);
-
-        $this->client->submitForm('Save', [
-            'reservation[nombrePlaces]' => 'Testing',
-            'reservation[typePMR]' => 'Testing',
-            'reservation[prixTotal]' => 'Testing',
-            'reservation[cinemas]' => 'Testing',
-            'reservation[films]' => 'Testing',
-            'reservation[seances]' => 'Testing',
-        ]);
-
-        self::assertResponseRedirects($this->path);
-
-        self::assertSame(1, $this->repository->count([]));
-    }
-
-    public function testShow(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('My Title');
-        $fixture->setTypePMR('My Title');
-        $fixture->setPrixTotal('My Title');
-        $fixture->setCinemas('My Title');
-        $fixture->setFilms('My Title');
-        $fixture->setSeances('My Title');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Reservation');
-
-        // Use assertions to check that the properties are properly displayed.
-    }
-
-    public function testEdit(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('Value');
-        $fixture->setTypePMR('Value');
-        $fixture->setPrixTotal('Value');
-        $fixture->setCinemas('Value');
-        $fixture->setFilms('Value');
-        $fixture->setSeances('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s/edit', $this->path, $fixture->getId()));
-
-        $this->client->submitForm('Update', [
-            'reservation[nombrePlaces]' => 'Something New',
-            'reservation[typePMR]' => 'Something New',
-            'reservation[prixTotal]' => 'Something New',
-            'reservation[cinemas]' => 'Something New',
-            'reservation[films]' => 'Something New',
-            'reservation[seances]' => 'Something New',
-        ]);
-
-        self::assertResponseRedirects('/reservations/');
-
-        $fixture = $this->repository->findAll();
-
-        self::assertSame('Something New', $fixture[0]->getNombrePlaces());
-        self::assertSame('Something New', $fixture[0]->getTypePMR());
-        self::assertSame('Something New', $fixture[0]->getPrixTotal());
-        self::assertSame('Something New', $fixture[0]->getCinemas());
-        self::assertSame('Something New', $fixture[0]->getFilms());
-        self::assertSame('Something New', $fixture[0]->getSeances());
-    }
-
-    public function testRemove(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('Value');
-        $fixture->setTypePMR('Value');
-        $fixture->setPrixTotal('Value');
-        $fixture->setCinemas('Value');
-        $fixture->setFilms('Value');
-        $fixture->setSeances('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-        $this->client->submitForm('Delete');
-
-        self::assertResponseRedirects('/reservations/');
-        self::assertSame(0, $this->repository->count([]));
-    }
-}
Index: templates/reservations/show.html.twig
===================================================================
diff --git a/templates/reservations/show.html.twig b/templates/reservations/show.html.twig
deleted file mode 100644
--- a/templates/reservations/show.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,30 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Reservations{% endblock %}
-
-{% block body %}
-    <h1>Reservations</h1>
-
-    <table class="table">
-        <tbody>
-            <tr>
-                <th>Id</th>
-                <td>{{ reservation.id }}</td>
-            </tr>
-            <tr>
-                <th>NombrePlaces</th>
-                <td>{{ reservation.nombrePlaces }}</td>
-            </tr>
-            <tr>
-                <th>TypePMR</th>
-                <td>{{ reservation.typePMR ? 'Yes' : 'No' }}</td>
-            </tr>
-            <tr>
-                <th>PrixTotal</th>
-                <td>{{ reservation.prixTotal }}</td>
-            </tr>
-        </tbody>
-    </table>
-
-    <a href="{{ path('app_reservations_index') }}">Retour à la liste</a>
-{% endblock %}
Index: templates/films/edit.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/edit.html.twig b/templates/films/edit.html.twig
deleted file mode 100644
--- a/templates/films/edit.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,13 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Edit Films{% endblock %}
-
-{% block body %}
-    <h1>Edit Films</h1>
-
-    {{ include('films/_form.html.twig', {'button_label': 'Update'}) }}
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-
-    {{ include('films/_delete_form.html.twig') }}
-{% endblock %}
Index: src/Form/FilmsType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/FilmsType.php b/src/Form/FilmsType.php
deleted file mode 100644
--- a/src/Form/FilmsType.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ /dev/null	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
@@ -1,38 +0,0 @@
-<?php
-
-namespace App\Form;
-
-use App\Entity\Cinemas;
-use App\Entity\Films;
-use Symfony\Bridge\Doctrine\Form\Type\EntityType;
-use Symfony\Component\Form\AbstractType;
-use Symfony\Component\Form\FormBuilderInterface;
-use Symfony\Component\OptionsResolver\OptionsResolver;
-
-class FilmsType extends AbstractType
-{
-    public function buildForm(FormBuilderInterface $builder, array $options): void
-    {
-        $builder
-            ->add('titre')
-            ->add('description')
-            ->add('imageFile')
-            ->add('ageMinimum')
-            ->add('coupDeCoeur')
-            ->add('note')
-            ->add('qualite')
-            ->add('cinemas', EntityType::class, [
-                'class' => Cinemas::class,
-                'choice_label' => 'id',
-                'multiple' => true,
-            ])
-        ;
-    }
-
-    public function configureOptions(OptionsResolver $resolver): void
-    {
-        $resolver->setDefaults([
-            'data_class' => Films::class,
-        ]);
-    }
-}
Index: src/Repository/ReservationsRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\Repository;\n\nuse App\\Entity\\Reservations;\nuse Doctrine\\Bundle\\DoctrineBundle\\Repository\\ServiceEntityRepository;\nuse Doctrine\\Persistence\\ManagerRegistry;\n\n/**\n * @extends ServiceEntityRepository<Reservations>\n */\nclass ReservationsRepository extends ServiceEntityRepository\n{\n    public function __construct(ManagerRegistry $registry)\n    {\n        parent::__construct($registry, Reservations::class);\n    }\n\n//    /**\n//     * @return Reservations[] Returns an array of Reservations objects\n//     */\n//    public function findByExampleField($value): array\n//    {\n//        return $this->createQueryBuilder('r')\n//            ->andWhere('r.exampleField = :val')\n//            ->setParameter('val', $value)\n//            ->orderBy('r.id', 'ASC')\n//            ->setMaxResults(10)\n//            ->getQuery()\n//            ->getResult()\n//        ;\n//    }\n\n//    public function findOneBySomeField($value): ?Reservations\n//    {\n//        return $this->createQueryBuilder('r')\n//            ->andWhere('r.exampleField = :val')\n//            ->setParameter('val', $value)\n//            ->getQuery()\n//            ->getOneOrNullResult()\n//        ;\n//    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Repository/ReservationsRepository.php b/src/Repository/ReservationsRepository.php
--- a/src/Repository/ReservationsRepository.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ b/src/Repository/ReservationsRepository.php	(date 1729935296177)
@@ -2,42 +2,40 @@
 
 namespace App\Repository;
 
-use App\Entity\Reservations;
-use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
-use Doctrine\Persistence\ManagerRegistry;
-
-/**
- * @extends ServiceEntityRepository<Reservations>
- */
-class ReservationsRepository extends ServiceEntityRepository
+class ReservationsRepository extends \Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository
 {
-    public function __construct(ManagerRegistry $registry)
+
+    public function __construct(\Doctrine\Persistence\ManagerRegistry $registry)
     {
-        parent::__construct($registry, Reservations::class);
+        parent::__construct($registry, \App\Entity\Reservations::class);
     }
 
-//    /**
-//     * @return Reservations[] Returns an array of Reservations objects
-//     */
-//    public function findByExampleField($value): array
-//    {
-//        return $this->createQueryBuilder('r')
-//            ->andWhere('r.exampleField = :val')
-//            ->setParameter('val', $value)
-//            ->orderBy('r.id', 'ASC')
-//            ->setMaxResults(10)
-//            ->getQuery()
-//            ->getResult()
-//        ;
-//    }
+    // /**
+    //  * @return Reservations[] Returns an array of Reservations objects
+    //  */
+    /*
+    public function findByExampleField($value)
+    {
+        return $this->createQueryBuilder('r')
+            ->andWhere('r.exampleField = :val')
+            ->setParameter('val', $value)
+            ->orderBy('r.id', 'ASC')
+            ->setMaxResults(10)
+            ->getQuery()
+            ->getResult()
+        ;
+    }
+    */
 
-//    public function findOneBySomeField($value): ?Reservations
-//    {
-//        return $this->createQueryBuilder('r')
-//            ->andWhere('r.exampleField = :val')
-//            ->setParameter('val', $value)
-//            ->getQuery()
-//            ->getOneOrNullResult()
-//        ;
-//    }
-}
+    /*
+    public function findOneBySomeField($value): ?Reservations
+    {
+        return $this->createQueryBuilder('r')
+            ->andWhere('r.exampleField = :val')
+            ->setParameter('val', $value)
+            ->getQuery()
+            ->getOneOrNullResult()
+        ;
+    }
+    */
+}
\ No newline at end of file
Index: src/Repository/FilmsRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php /** @noinspection ALL */\n\nnamespace App\\Repository;\n\nuse App\\Entity\\Films;\nuse Doctrine\\Bundle\\DoctrineBundle\\Repository\\ServiceEntityRepository;\nuse Doctrine\\Persistence\\ManagerRegistry;\n\n/**\n * @extends ServiceEntityRepository<Films>\n */\nclass FilmsRepository extends ServiceEntityRepository\n{\n    public function __construct(ManagerRegistry $registry)\n    {\n        parent::__construct($registry, Films::class);\n    }\n\n\n    //    /**\n    //     * @return Films[] Returns an array of Films objects\n    //     */\n    //    public function findByExampleField($value): array\n    //    {\n    //        return $this->createQueryBuilder('f')\n    //            ->andWhere('f.exampleField = :val')\n    //            ->setParameter('val', $value)\n    //            ->orderBy('f.id', 'ASC')\n    //            ->setMaxResults(10)\n    //            ->getQuery()\n    //            ->getResult()\n    //        ;\n    //    }\n\n    //    public function findOneBySomeField($value): ?Films\n    //    {\n    //        return $this->createQueryBuilder('f')\n    //            ->andWhere('f.exampleField = :val')\n    //            ->setParameter('val', $value)\n    //            ->getQuery()\n    //            ->getOneOrNullResult()\n    //        ;\n    //    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Repository/FilmsRepository.php b/src/Repository/FilmsRepository.php
--- a/src/Repository/FilmsRepository.php	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ b/src/Repository/FilmsRepository.php	(date 1729934550500)
@@ -1,4 +1,4 @@
-<?php /** @noinspection ALL */
+<?php
 
 namespace App\Repository;
 
@@ -6,9 +6,6 @@
 use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
 use Doctrine\Persistence\ManagerRegistry;
 
-/**
- * @extends ServiceEntityRepository<Films>
- */
 class FilmsRepository extends ServiceEntityRepository
 {
     public function __construct(ManagerRegistry $registry)
@@ -16,29 +13,5 @@
         parent::__construct($registry, Films::class);
     }
 
-
-    //    /**
-    //     * @return Films[] Returns an array of Films objects
-    //     */
-    //    public function findByExampleField($value): array
-    //    {
-    //        return $this->createQueryBuilder('f')
-    //            ->andWhere('f.exampleField = :val')
-    //            ->setParameter('val', $value)
-    //            ->orderBy('f.id', 'ASC')
-    //            ->setMaxResults(10)
-    //            ->getQuery()
-    //            ->getResult()
-    //        ;
-    //    }
-
-    //    public function findOneBySomeField($value): ?Films
-    //    {
-    //        return $this->createQueryBuilder('f')
-    //            ->andWhere('f.exampleField = :val')
-    //            ->setParameter('val', $value)
-    //            ->getQuery()
-    //            ->getOneOrNullResult()
-    //        ;
-    //    }
+    // Ajoute ici des méthodes spécifiques à la requête pour l'entité Films, si nécessaire
 }
Index: templates/films/_delete_form.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><form method=\"post\" action=\"{{ path('app_films_delete', {'id': film.id}) }}\" onsubmit=\"return confirm('Are you sure you want to delete this item?');\">\n    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token('delete' ~ film.id) }}\">\n    <button class=\"btn\">Delete</button>\n</form>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/_delete_form.html.twig b/templates/films/_delete_form.html.twig
--- a/templates/films/_delete_form.html.twig	(revision 823b6638ccd2baf6b08944b5afaf19a663d0f573)
+++ b/templates/films/_delete_form.html.twig	(date 1729944625292)
@@ -1,4 +1,4 @@
-<form method="post" action="{{ path('app_films_delete', {'id': film.id}) }}" onsubmit="return confirm('Are you sure you want to delete this item?');">
+<form method="post" action="{{ path('app_films_delete', {'id': film.id}) }}" onsubmit="return confirm('Voulez-vous vraiment supprimer ce film ?');">
     <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ film.id) }}">
-    <button class="btn">Delete</button>
+    <button class="btn btn-danger">Supprimer</button>
 </form>
