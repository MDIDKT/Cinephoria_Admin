Index: templates/films/show.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/show.html.twig b/templates/films/show.html.twig
deleted file mode 100644
--- a/templates/films/show.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,50 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Films{% endblock %}
-
-{% block body %}
-    <h1>Films</h1>
-
-    <table class="table">
-        <tbody>
-            <tr>
-                <th>Id</th>
-                <td>{{ film.id }}</td>
-            </tr>
-            <tr>
-                <th>Titre</th>
-                <td>{{ film.titre }}</td>
-            </tr>
-            <tr>
-                <th>Description</th>
-                <td>{{ film.description }}</td>
-            </tr>
-            <tr>
-                <th>Affiche</th>
-                <td>{{ film.affiche }}</td>
-            </tr>
-            <tr>
-                <th>AgeMinimum</th>
-                <td>{{ film.ageMinimum }}</td>
-            </tr>
-            <tr>
-                <th>CoupDeCoeur</th>
-                <td>{{ film.coupDeCoeur ? 'Yes' : 'No' }}</td>
-            </tr>
-            <tr>
-                <th>Note</th>
-                <td>{{ film.note }}</td>
-            </tr>
-            <tr>
-                <th>Qualite</th>
-                <td>{{ film.qualite }}</td>
-            </tr>
-        </tbody>
-    </table>
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-
-    <a href="{{ path('app_films_edit', {'id': film.id}) }}">edit</a>
-
-    {{ include('films/_delete_form.html.twig') }}
-{% endblock %}
Index: templates/films/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/index.html.twig b/templates/films/index.html.twig
deleted file mode 100644
--- a/templates/films/index.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,45 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Films index{% endblock %}
-
-{% block body %}
-    <h1>Films index</h1>
-
-    <table class="table">
-        <thead>
-            <tr>
-                <th>Id</th>
-                <th>Titre</th>
-                <th>Description</th>
-                <th>Affiche</th>
-                <th>AgeMinimum</th>
-                <th>CoupDeCoeur</th>
-                <th>Note</th>
-                <th>Qualite</th>
-                <th>actions</th>
-            </tr>
-        </thead>
-        <tbody>
-        {% for film in films %}
-            <tr>
-                <td>{{ film.id }}</td>
-                <td>{{ film.titre }}</td>
-                <td>{{ film.description }}</td>
-                <td>{{ film.affiche }}</td>
-                <td>{{ film.ageMinimum }}</td>
-                <td>{{ film.coupDeCoeur ? 'Yes' : 'No' }}</td>
-                <td>{{ film.note }}</td>
-                <td>{{ film.qualite }}</td>
-                <td>
-                    <a href="{{ path('app_films_show', {'id': film.id}) }}" class="btn btn-primary m-lg-3">Voir</a>
-                </td>
-            </tr>
-        {% else %}
-            <tr>
-                <td colspan="9">no records found</td>
-            </tr>
-        {% endfor %}
-        </tbody>
-    </table>
-
-{% endblock %}
Index: src/Form/ReservationsType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/ReservationsType.php b/src/Form/ReservationsType.php
deleted file mode 100644
--- a/src/Form/ReservationsType.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,43 +0,0 @@
-<?php
-
-namespace App\Form;
-
-use App\Entity\Cinemas;
-use App\Entity\Films;
-use App\Entity\Reservations;
-use App\Entity\Seance;
-use Symfony\Bridge\Doctrine\Form\Type\EntityType;
-use Symfony\Component\Form\AbstractType;
-use Symfony\Component\Form\FormBuilderInterface;
-use Symfony\Component\OptionsResolver\OptionsResolver;
-
-class ReservationsType extends AbstractType
-{
-    public function buildForm(FormBuilderInterface $builder, array $options): void
-    {
-        $builder
-            ->add('nombrePlaces')
-            ->add('typePMR')
-            ->add('prixTotal')
-            ->add('cinemas', EntityType::class, [
-                'class' => Cinemas::class,
-                'choice_label' => 'id',
-            ])
-            ->add('films', EntityType::class, [
-                'class' => Films::class,
-                'choice_label' => 'id',
-            ])
-            ->add('seances', EntityType::class, [
-                'class' => Seance::class,
-                'choice_label' => 'id',
-            ])
-        ;
-    }
-
-    public function configureOptions(OptionsResolver $resolver): void
-    {
-        $resolver->setDefaults([
-            'data_class' => Reservations::class,
-        ]);
-    }
-}
Index: src/Controller/ReservationsController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/ReservationsController.php b/src/Controller/ReservationsController.php
deleted file mode 100644
--- a/src/Controller/ReservationsController.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,79 +0,0 @@
-<?php
-
-namespace App\Controller;
-
-use App\Entity\Reservations;
-use App\Form\ReservationsType;
-use App\Repository\ReservationsRepository;
-use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
-use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\Routing\Attribute\Route;
-
-#[Route('/reservations')]
-final class ReservationsController extends AbstractController
-{
-    #[Route(name: 'app_reservations_index', methods: ['GET'])]
-    public function index(ReservationsRepository $reservationsRepository): Response
-    {
-        return $this->render('reservations/index.html.twig', [
-            'reservations' => $reservationsRepository->findAll(),
-        ]);
-    }
-
-    #[Route('/new', name: 'app_reservations_new', methods: ['GET', 'POST'])]
-    public function new(Request $request, EntityManagerInterface $entityManager): Response
-    {
-        $reservation = new Reservations();
-        $form = $this->createForm(ReservationsType::class, $reservation);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($reservation);
-            $entityManager->flush();
-        }
-
-        return $this->render('reservations/new.html.twig', [
-            'reservation' => $reservation,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_reservations_show', methods: ['GET'])]
-    public function show(Reservations $reservation): Response
-    {
-        return $this->render('reservations/show.html.twig', [
-            'reservation' => $reservation,
-        ]);
-    }
-
-    #[Route('/{id}/edit', name: 'app_reservations_edit', methods: ['GET', 'POST'])]
-    public function edit(Request $request, Reservations $reservation, EntityManagerInterface $entityManager): Response
-    {
-        $form = $this->createForm(ReservationsType::class, $reservation);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_reservations_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('reservations/edit.html.twig', [
-            'reservation' => $reservation,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_reservations_delete', methods: ['POST'])]
-    public function delete(Request $request, Reservations $reservation, EntityManagerInterface $entityManager): Response
-    {
-        if ($this->isCsrfTokenValid('delete'.$reservation->getId(), $request->getPayload()->getString('_token'))) {
-            $entityManager->remove($reservation);
-            $entityManager->flush();
-        }
-
-        return $this->redirectToRoute('app_reservations_index', [], Response::HTTP_SEE_OTHER);
-    }
-}
Index: tests/Controller/FilmsControllerTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Controller/FilmsControllerTest.php b/tests/Controller/FilmsControllerTest.php
deleted file mode 100644
--- a/tests/Controller/FilmsControllerTest.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,155 +0,0 @@
-<?php
-
-namespace App\Tests\Controller;
-
-use App\Entity\Films;
-use Doctrine\ORM\EntityManagerInterface;
-use Doctrine\ORM\EntityRepository;
-use Symfony\Bundle\FrameworkBundle\KernelBrowser;
-use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
-
-final class FilmsControllerTest extends WebTestCase
-{
-    private KernelBrowser $client;
-    private EntityManagerInterface $manager;
-    private EntityRepository $repository;
-    private string $path = '/films/';
-
-    protected function setUp(): void
-    {
-        $this->client = static::createClient();
-        $this->manager = static::getContainer()->get('doctrine')->getManager();
-        $this->repository = $this->manager->getRepository(Films::class);
-
-        foreach ($this->repository->findAll() as $object) {
-            $this->manager->remove($object);
-        }
-
-        $this->manager->flush();
-    }
-
-    public function testIndex(): void
-    {
-        $this->client->followRedirects();
-        $crawler = $this->client->request('GET', $this->path);
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Film index');
-
-        // Use the $crawler to perform additional assertions e.g.
-        // self::assertSame('Some text on the page', $crawler->filter('.p')->first());
-    }
-
-    public function testNew(): void
-    {
-        $this->markTestIncomplete();
-        $this->client->request('GET', sprintf('%snew', $this->path));
-
-        self::assertResponseStatusCodeSame(200);
-
-        $this->client->submitForm('Save', [
-            'film[titre]' => 'Testing',
-            'film[description]' => 'Testing',
-            'film[affiche]' => 'Testing',
-            'film[ageMinimum]' => 'Testing',
-            'film[coupDeCoeur]' => 'Testing',
-            'film[note]' => 'Testing',
-            'film[qualite]' => 'Testing',
-            'film[cinemas]' => 'Testing',
-        ]);
-
-        self::assertResponseRedirects($this->path);
-
-        self::assertSame(1, $this->repository->count([]));
-    }
-
-    public function testShow(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('My Title');
-        $fixture->setDescription('My Title');
-        $fixture->setAffiche('My Title');
-        $fixture->setAgeMinimum('My Title');
-        $fixture->setCoupDeCoeur('My Title');
-        $fixture->setNote('My Title');
-        $fixture->setQualite('My Title');
-        $fixture->setCinemas('My Title');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Film');
-
-        // Use assertions to check that the properties are properly displayed.
-    }
-
-    public function testEdit(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('Value');
-        $fixture->setDescription('Value');
-        $fixture->setAffiche('Value');
-        $fixture->setAgeMinimum('Value');
-        $fixture->setCoupDeCoeur('Value');
-        $fixture->setNote('Value');
-        $fixture->setQualite('Value');
-        $fixture->setCinemas('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s/edit', $this->path, $fixture->getId()));
-
-        $this->client->submitForm('Update', [
-            'film[titre]' => 'Something New',
-            'film[description]' => 'Something New',
-            'film[affiche]' => 'Something New',
-            'film[ageMinimum]' => 'Something New',
-            'film[coupDeCoeur]' => 'Something New',
-            'film[note]' => 'Something New',
-            'film[qualite]' => 'Something New',
-            'film[cinemas]' => 'Something New',
-        ]);
-
-        self::assertResponseRedirects('/films/');
-
-        $fixture = $this->repository->findAll();
-
-        self::assertSame('Something New', $fixture[0]->getTitre());
-        self::assertSame('Something New', $fixture[0]->getDescription());
-        self::assertSame('Something New', $fixture[0]->getAffiche());
-        self::assertSame('Something New', $fixture[0]->getAgeMinimum());
-        self::assertSame('Something New', $fixture[0]->getCoupDeCoeur());
-        self::assertSame('Something New', $fixture[0]->getNote());
-        self::assertSame('Something New', $fixture[0]->getQualite());
-        self::assertSame('Something New', $fixture[0]->getCinemas());
-    }
-
-    public function testRemove(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Films();
-        $fixture->setTitre('Value');
-        $fixture->setDescription('Value');
-        $fixture->setAffiche('Value');
-        $fixture->setAgeMinimum('Value');
-        $fixture->setCoupDeCoeur('Value');
-        $fixture->setNote('Value');
-        $fixture->setQualite('Value');
-        $fixture->setCinemas('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-        $this->client->submitForm('Delete');
-
-        self::assertResponseRedirects('/films/');
-        self::assertSame(0, $this->repository->count([]));
-    }
-}
Index: templates/reservations/_form.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/_form.html.twig b/templates/reservations/_form.html.twig
deleted file mode 100644
--- a/templates/reservations/_form.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,4 +0,0 @@
-{{ form_start(form) }}
-    {{ form_widget(form) }}
-    <button class="btn">{{ button_label|default('Save') }}</button>
-{{ form_end(form) }}
Index: src/Controller/FilmsController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Controller/FilmsController.php b/src/Controller/FilmsController.php
deleted file mode 100644
--- a/src/Controller/FilmsController.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,96 +0,0 @@
-<?php
-
-namespace App\Controller;
-
-use App\Entity\Films;
-use App\Form\FilmsType;
-use App\Repository\FilmsRepository;
-use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
-use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\HttpFoundation\Response;
-use Symfony\Component\Routing\Attribute\Route;
-
-#[Route('/films')]
-final class FilmsController extends AbstractController
-{
-    #[Route(name: 'app_films_index', methods: ['GET'])]
-    public function index(FilmsRepository $filmsRepository): Response
-    {
-        return $this->render('films/index.html.twig', [
-            'films' => $filmsRepository->findAll(),
-        ]);
-    }
-
-    #[Route(name: 'app_films_sectionFilms', methods: ['GET'])]
-    public function listeFilms(FilmsRepository $filmsRepository, $filmRepository): Response
-    {
-        // Récupérer tous les films depuis la base de données
-        $films = $filmRepository->findAll();
-
-        // Vérifie si la variable $films contient bien des données
-        if (!$films) {
-            throw $this->createNotFoundException('Aucun film trouvé.');
-        }
-        return $this->render('_Partials/_sectionFilms.html.twig', [
-            'films' => $filmsRepository->findAll(),
-        ]);
-    }
-
-    #[Route('/new', name: 'app_films_new', methods: ['GET', 'POST'])]
-    public function new(Request $request, EntityManagerInterface $entityManager): Response
-    {
-        $film = new Films();
-        $form = $this->createForm(FilmsType::class, $film);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->persist($film);
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('films/new.html.twig', [
-            'film' => $film,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_films_show', methods: ['GET'])]
-    public function show(Films $film): Response
-    {
-        return $this->render('films/show.html.twig', [
-            'film' => $film,
-        ]);
-    }
-
-    #[Route('/{id}/edit', name: 'app_films_edit', methods: ['GET', 'POST'])]
-    public function edit(Request $request, Films $film, EntityManagerInterface $entityManager): Response
-    {
-        $form = $this->createForm(FilmsType::class, $film);
-        $form->handleRequest($request);
-
-        if ($form->isSubmitted() && $form->isValid()) {
-            $entityManager->flush();
-
-            return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-        }
-
-        return $this->render('films/edit.html.twig', [
-            'film' => $film,
-            'form' => $form,
-        ]);
-    }
-
-    #[Route('/{id}', name: 'app_films_delete', methods: ['POST'])]
-    public function delete(Request $request, Films $film, EntityManagerInterface $entityManager): Response
-    {
-        if ($this->isCsrfTokenValid('delete'.$film->getId(), $request->getPayload()->getString('_token'))) {
-            $entityManager->remove($film);
-            $entityManager->flush();
-        }
-
-        return $this->redirectToRoute('app_films_index', [], Response::HTTP_SEE_OTHER);
-    }
-}
Index: templates/reservations/new.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/new.html.twig b/templates/reservations/new.html.twig
deleted file mode 100644
--- a/templates/reservations/new.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,11 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}New Reservations{% endblock %}
-
-{% block body %}
-    <h1>Create new Reservations</h1>
-
-    {{ include('reservations/_form.html.twig') }}
-
-    <a href="{{ path('app_reservations_index') }}">back to list</a>
-{% endblock %}
Index: templates/films/new.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/new.html.twig b/templates/films/new.html.twig
deleted file mode 100644
--- a/templates/films/new.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,11 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}New Films{% endblock %}
-
-{% block body %}
-    <h1>Create new Films</h1>
-
-    {{ include('films/_form.html.twig') }}
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-{% endblock %}
Index: templates/reservations/edit.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/edit.html.twig b/templates/reservations/edit.html.twig
deleted file mode 100644
--- a/templates/reservations/edit.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,16 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Edit Reservations{% endblock %}
-
-{% block body %}
-    <h1>Edit Reservations</h1>
-
-    <form method="post" action="{{ path('app_reservations_edit', {'id': reservation.id}) }}" onsubmit="return confirm('Valider la modification de votre reservation?');">
-        {{ form_widget(form) }}
-        <button class="btn">Valider</button>
-    </form>
-
-
-    <a href="{{ path('app_reservations_index') }}">Retour à la liste</a>
-
-{% endblock %}
Index: templates/reservations/index.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/index.html.twig b/templates/reservations/index.html.twig
deleted file mode 100644
--- a/templates/reservations/index.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,35 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Reservations index{% endblock %}
-
-{% block body %}
-    <h1>Vos réservations</h1>
-
-    <table class="table">
-        <thead>
-            <tr>
-                <th>Places</th>
-                <th>Type PMR ?</th>
-                <th>Prix Total</th>
-            </tr>
-        </thead>
-        <tbody>
-        {% for reservation in reservations %}
-            <tr>
-                <td>{{ reservation.nombrePlaces }}</td>
-                <td>{{ reservation.typePMR ? 'Oui' : 'Non' }}</td>
-                <td>{{ reservation.prixTotal }}</td>
-                <td class="d-flex">
-                    <a href="{{ path('app_reservations_show', {'id': reservation.id}) }}" class="btn btn-xs sm:btn-sm md:btn-md lg:btn-lg ">Voir</a>
-                    <a href="{{ path('app_reservations_edit', {'id': reservation.id}) }}" class="btn btn-secondary m-lg-3 ">Modifier</a>
-                    {{ include('reservations/_delete_form.html.twig') }}
-                </td>
-            </tr>
-        {% else %}
-            <tr>
-                <td colspan="5">no records found</td>
-            </tr>
-        {% endfor %}
-        </tbody>
-    </table>
-{% endblock %}
Index: templates/reservations/_delete_form.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/_delete_form.html.twig b/templates/reservations/_delete_form.html.twig
deleted file mode 100644
--- a/templates/reservations/_delete_form.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,4 +0,0 @@
-<form method="post" action="{{ path('app_reservations_delete', {'id': reservation.id}) }}" onsubmit="return confirm('Etes-vous sur d\'annuler votre reservation?');">
-    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ reservation.id) }}">
-    <button class="btn btn-danger m-lg-3">Supprimer</button>
-</form>
Index: tests/Controller/ReservationsControllerTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Controller/ReservationsControllerTest.php b/tests/Controller/ReservationsControllerTest.php
deleted file mode 100644
--- a/tests/Controller/ReservationsControllerTest.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,143 +0,0 @@
-<?php
-
-namespace App\Tests\Controller;
-
-use App\Entity\Reservations;
-use Doctrine\ORM\EntityManagerInterface;
-use Doctrine\ORM\EntityRepository;
-use Symfony\Bundle\FrameworkBundle\KernelBrowser;
-use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
-
-final class ReservationsControllerTest extends WebTestCase
-{
-    private KernelBrowser $client;
-    private EntityManagerInterface $manager;
-    private EntityRepository $repository;
-    private string $path = '/reservations/';
-
-    protected function setUp(): void
-    {
-        $this->client = static::createClient();
-        $this->manager = static::getContainer()->get('doctrine')->getManager();
-        $this->repository = $this->manager->getRepository(Reservations::class);
-
-        foreach ($this->repository->findAll() as $object) {
-            $this->manager->remove($object);
-        }
-
-        $this->manager->flush();
-    }
-
-    public function testIndex(): void
-    {
-        $this->client->followRedirects();
-        $crawler = $this->client->request('GET', $this->path);
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Reservation index');
-
-        // Use the $crawler to perform additional assertions e.g.
-        // self::assertSame('Some text on the page', $crawler->filter('.p')->first());
-    }
-
-    public function testNew(): void
-    {
-        $this->markTestIncomplete();
-        $this->client->request('GET', sprintf('%snew', $this->path));
-
-        self::assertResponseStatusCodeSame(200);
-
-        $this->client->submitForm('Save', [
-            'reservation[nombrePlaces]' => 'Testing',
-            'reservation[typePMR]' => 'Testing',
-            'reservation[prixTotal]' => 'Testing',
-            'reservation[cinemas]' => 'Testing',
-            'reservation[films]' => 'Testing',
-            'reservation[seances]' => 'Testing',
-        ]);
-
-        self::assertResponseRedirects($this->path);
-
-        self::assertSame(1, $this->repository->count([]));
-    }
-
-    public function testShow(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('My Title');
-        $fixture->setTypePMR('My Title');
-        $fixture->setPrixTotal('My Title');
-        $fixture->setCinemas('My Title');
-        $fixture->setFilms('My Title');
-        $fixture->setSeances('My Title');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-
-        self::assertResponseStatusCodeSame(200);
-        self::assertPageTitleContains('Reservation');
-
-        // Use assertions to check that the properties are properly displayed.
-    }
-
-    public function testEdit(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('Value');
-        $fixture->setTypePMR('Value');
-        $fixture->setPrixTotal('Value');
-        $fixture->setCinemas('Value');
-        $fixture->setFilms('Value');
-        $fixture->setSeances('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s/edit', $this->path, $fixture->getId()));
-
-        $this->client->submitForm('Update', [
-            'reservation[nombrePlaces]' => 'Something New',
-            'reservation[typePMR]' => 'Something New',
-            'reservation[prixTotal]' => 'Something New',
-            'reservation[cinemas]' => 'Something New',
-            'reservation[films]' => 'Something New',
-            'reservation[seances]' => 'Something New',
-        ]);
-
-        self::assertResponseRedirects('/reservations/');
-
-        $fixture = $this->repository->findAll();
-
-        self::assertSame('Something New', $fixture[0]->getNombrePlaces());
-        self::assertSame('Something New', $fixture[0]->getTypePMR());
-        self::assertSame('Something New', $fixture[0]->getPrixTotal());
-        self::assertSame('Something New', $fixture[0]->getCinemas());
-        self::assertSame('Something New', $fixture[0]->getFilms());
-        self::assertSame('Something New', $fixture[0]->getSeances());
-    }
-
-    public function testRemove(): void
-    {
-        $this->markTestIncomplete();
-        $fixture = new Reservations();
-        $fixture->setNombrePlaces('Value');
-        $fixture->setTypePMR('Value');
-        $fixture->setPrixTotal('Value');
-        $fixture->setCinemas('Value');
-        $fixture->setFilms('Value');
-        $fixture->setSeances('Value');
-
-        $this->manager->persist($fixture);
-        $this->manager->flush();
-
-        $this->client->request('GET', sprintf('%s%s', $this->path, $fixture->getId()));
-        $this->client->submitForm('Delete');
-
-        self::assertResponseRedirects('/reservations/');
-        self::assertSame(0, $this->repository->count([]));
-    }
-}
Index: templates/reservations/show.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/reservations/show.html.twig b/templates/reservations/show.html.twig
deleted file mode 100644
--- a/templates/reservations/show.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,30 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Reservations{% endblock %}
-
-{% block body %}
-    <h1>Reservations</h1>
-
-    <table class="table">
-        <tbody>
-            <tr>
-                <th>Id</th>
-                <td>{{ reservation.id }}</td>
-            </tr>
-            <tr>
-                <th>NombrePlaces</th>
-                <td>{{ reservation.nombrePlaces }}</td>
-            </tr>
-            <tr>
-                <th>TypePMR</th>
-                <td>{{ reservation.typePMR ? 'Yes' : 'No' }}</td>
-            </tr>
-            <tr>
-                <th>PrixTotal</th>
-                <td>{{ reservation.prixTotal }}</td>
-            </tr>
-        </tbody>
-    </table>
-
-    <a href="{{ path('app_reservations_index') }}">Retour à la liste</a>
-{% endblock %}
Index: templates/films/edit.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/films/edit.html.twig b/templates/films/edit.html.twig
deleted file mode 100644
--- a/templates/films/edit.html.twig	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,15 +0,0 @@
-{% extends 'base.html.twig' %}
-
-{% block title %}Edit Films{% endblock %}
-
-{% block body %}
-    <h1>Edit Films</h1>
-
-    {{ include('films/_form.html.twig', {'button_label': 'Update'}) }}
-
-    <img src="{{ vich_uploader_asset(affiche, 'afficheFile'), }}" alt="mon image">
-
-    <a href="{{ path('app_films_index') }}">back to list</a>
-
-    {{ include('films/_delete_form.html.twig') }}
-{% endblock %}
Index: src/Form/FilmsType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Form/FilmsType.php b/src/Form/FilmsType.php
deleted file mode 100644
--- a/src/Form/FilmsType.php	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
+++ /dev/null	(revision b9cbebf8ddb1e812d723307f338dc18cfe1710cb)
@@ -1,39 +0,0 @@
-<?php
-
-namespace App\Form;
-
-use App\Entity\Cinemas;
-use App\Entity\Films;
-use Symfony\Bridge\Doctrine\Form\Type\EntityType;
-use Symfony\Component\Form\AbstractType;
-use Symfony\Component\Form\Extension\Core\Type\FileType;
-use Symfony\Component\Form\FormBuilderInterface;
-use Symfony\Component\OptionsResolver\OptionsResolver;
-
-class FilmsType extends AbstractType
-{
-/*    public function buildForm(FormBuilderInterface $builder, array $options): void
-    {
-        $builder
-            ->add('titre')
-            ->add('description')
-            ->add('afficheFile', FileType::class)
-            ->add('ageMinimum')
-            ->add('coupDeCoeur')
-            ->add('note')
-            ->add('qualite')
-            ->add('cinemas', EntityType::class, [
-                'class' => Cinemas::class,
-                'choice_label' => 'id',
-                'multiple' => true,
-            ])
-        ;
-    }*/
-
-    public function configureOptions(OptionsResolver $resolver): void
-    {
-        $resolver->setDefaults([
-            'data_class' => Films::class,
-        ]);
-    }
-}
